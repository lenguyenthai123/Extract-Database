name: CI/CD For Backend

# Kích hoạt pipeline khi có push hoặc pull request vào nhánh main
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  # Job build-backend: build backend và đẩy image Docker lên DockerHub
  build-backend:
    runs-on: ubuntu-latest

    steps:
      # Bước checkout: Lấy mã nguồn từ repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Bước thiết lập JDK 22: Cài đặt Java Development Kit phiên bản 22
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      # Bước cache các gói Maven: Lưu trữ các gói Maven để tăng tốc độ build lần sau
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/backend/extraction-service/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Bước build với Maven: Build project Maven và bỏ qua các bài test
      - name: Build with Maven
        run: mvn -f backend/extraction-service/pom.xml package -DskipTests

      # Bước thiết lập Docker Buildx: Cấu hình Docker Buildx để build image đa nền tảng
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Bước đăng nhập DockerHub: Đăng nhập vào DockerHub để có thể đẩy image lên
      - name: Login to DockerHub 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Bước build và đẩy image Docker của backend: Build image Docker và đẩy lên DockerHub
      - name: Build and push Docker image for backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend/extraction-service
          file: ./backend/extraction-service/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.BACKEND }}:latest

  # Job ec2-cd-backend: Deploy backend lên EC2 instance
  ec2-cd-backend:
    runs-on: ubuntu-latest
    needs: build-backend  # Đảm bảo job này chỉ chạy sau khi job build-backend hoàn thành

    steps:
      # Bước SSH vào EC2 instance: Kết nối SSH tới EC2 instance và thực hiện các lệnh deploy
      - name: Backend SSH into EC2 instance
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST_BACKEND }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Kéo các image backend trong docker-compose có tên Service là app.
            docker-compose pull

            # Tái tạo lại service app là Image Backend được push lên mà không cần tái tạo lại hết
            # Chỉ áp dụng trong trường hợp này vì 2 service Redis và Elastic Seacrh depend on App.
            docker-compose up -d 

            # Xóa các image không sử dụng
            docker image prune -f